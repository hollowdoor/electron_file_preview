{"version":3,"file":"electron-file-preview.js","sources":["../src/lib/is_element.js","../node_modules/is-video/index.js","../src/lib/file_preview.js","../src/index.js"],"sourcesContent":["/**\n * Returns `true` if provided input is Element.\n * @name isElement\n * @param {*} [input]\n * @returns {boolean}\n */\nexport default function (input) {\n  return (input != null)\n    && (typeof input === 'object')\n    && (input.nodeType === Node.ELEMENT_NODE)\n    && (typeof input.style === 'object')\n    && (typeof input.ownerDocument === 'object');\n}\n","'use strict';\nvar path = require('path');\nvar videoExtensions = require('video-extensions');\nvar exts = Object.create(null);\n\nvideoExtensions.forEach(function (el) {\n\texts[el] = true;\n});\n\nmodule.exports = function (filepath) {\n\treturn path.extname(filepath).slice(1).toLowerCase() in exts;\n};\n","import isVideo from 'is-video';\nimport path from 'path';\nimport { spawn } from 'child_process';\n\nexport default class FilePreview {\n    constructor(info, {\n        element,\n        filename\n    } = {}){\n        this.info = info;\n        this.element = element;\n        this.source = filename;\n        this.dest = path.join(info.cacheFolder, 'temp.mp4');\n\n        this.save();\n    }\n    save(){\n        let { filename, dest } = this;\n        if(isVideo(filename)){\n            let stream  = fs.createWriteStream(dest);\n            let c = spawn('ffmpeg', ['-i', this.source, '-y', this.dest]);\n            c.on('exit', ()=>console.log('done'));\n            c.on('error', e=>console.log(e));\n            console.log('bla')\n            /*ffmpeg(filename)\n            .noAudio()\n            .videoCodec('libx264')\n            .duration('10')\n            .output(stream);*/\n        }\n    }\n}\n","import isElement from './lib/is_element.js';\nimport FilePreview from './lib/file_preview.js';\n\nexport { FilePreview };\n\nexport function efp(element, filename, options){\n    if(!isElement(element)){\n        throw new TypeError(element + ' is not a DOM element');\n    }\n\n    return new FilePreview(\n        Object.assign({\n            element, filename\n        }, options)\n    );\n}\n"],"names":["videoExtensions","isVideo","spawn"],"mappings":";;;;;AAAA;;;;;;AAMA,gBAAe,UAAU,KAAK,EAAE;EAC9B,OAAO,CAAC,KAAK,IAAI,IAAI;QACf,OAAO,KAAK,KAAK,QAAQ,CAAC;QAC1B,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,CAAC;QACrC,OAAO,KAAK,CAAC,KAAK,KAAK,QAAQ,CAAC;QAChC,OAAO,KAAK,CAAC,aAAa,KAAK,QAAQ,CAAC,CAAC;CAChD;;;;;;;;;;ACTD,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAE/BA,iBAAe,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;CACrC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;CAChB,CAAC,CAAC;;AAEH,SAAc,GAAG,UAAU,QAAQ,EAAE;CACpC,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC;CAC7D;;ACPD,IAAqB,WAAW,GAAC,oBAClB,CAAC,IAAI,EAAE,GAAA,CAGX;6BAAN,GAAG,EAAE,CAFF;QAAA,OAAO,eACP;QAAA,QAAQ;;IAEZ,IAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,IAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,IAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,IAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;;IAExD,IAAQ,CAAC,IAAI,EAAE,CAAC;CACf,CAAA;AACL,sBAAI,IAAI,mBAAE;IACN,OAA0B,GAAG,IAAI;QAAvB,IAAA,QAAQ;QAAE,IAAA,IAAI,YAAhB;IACR,GAAOC,KAAO,CAAC,QAAQ,CAAC,CAAC;QACrB,IAAQ,MAAM,IAAI,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAQ,CAAC,GAAGC,mBAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAClE,CAAK,CAAC,EAAE,CAAC,MAAM,EAAE,WAAE,SAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAA,CAAC,CAAC;QAC1C,CAAK,CAAC,EAAE,CAAC,OAAO,EAAE,UAAA,CAAC,CAAA,SAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC;QACrC,OAAW,CAAC,GAAG,CAAC,KAAK,EAAC;;;;;;KAMrB;CACJ,CAAA;;ACzBE,SAAS,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;IAC3C,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACnB,MAAM,IAAI,SAAS,CAAC,OAAO,GAAG,uBAAuB,CAAC,CAAC;KAC1D;;IAED,OAAO,IAAI,WAAW;QAClB,MAAM,CAAC,MAAM,CAAC;YACV,SAAA,OAAO,EAAE,UAAA,QAAQ;SACpB,EAAE,OAAO,CAAC;KACd,CAAC;CACL;;;;;;;;;"}